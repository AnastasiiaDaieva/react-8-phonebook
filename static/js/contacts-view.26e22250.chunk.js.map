{"version":3,"sources":["components/Container/Container.js","components/Container/Container.module.scss","components/Section/Section.module.scss","components/Contacts/ContactsItem.module.scss","components/Contacts/Contacts.module.scss","components/Form/Form.module.scss","components/Filter/Filter.module.scss","views/ContactsView.module.scss","components/Section/Section.jsx","components/Contacts/ContactsItem.jsx","store/contacts/contacts-selectors.js","components/Contacts/Contacts.jsx","store/contacts/contacts-operations.js","components/Form/Form.jsx","components/Filter/Filter.jsx","views/ContactsView.js"],"names":["Container","children","additionalClass","className","s","module","exports","Section","text","Section__heading","ContactsItem","id","name","number","deleteFunc","ContactsItem__text","type","ContactsItem__button","onClick","getFilter","state","contacts","filter","getVisibleContacts","items","getContacts","normalizedFilter","toLowerCase","includes","connect","dispatch","onDeleteContact","contactId","deleteContactRequest","axios","delete","then","deleteContactSuccess","catch","error","deleteContactError","useSelector","console","log","Contacts","Contacts__list","length","Contacts__message","map","onSubmit","contact","addContactRequest","post","data","addContactSuccess","addContactError","addContact","useState","setName","setNumber","findMap","find","handleChange","e","target","value","reset","alert","preventDefault","Form","htmlFor","Form__item","Form__input","onChange","pattern","title","required","Form__button","changeFilter","Filter__input","ContactsView","useDispatch","useEffect","a","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError"],"mappings":"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","file":"static/js/contacts-view.26e22250.chunk.js","sourcesContent":["import s from 'components/Container/Container.module.scss';\n\nimport PropTypes from 'prop-types';\n\nexport default function Container({ children, additionalClass }) {\n  return <div className={`${additionalClass}, ${s.Container}`}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.any,\n  additionalClass: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__wW3gA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Section__heading\":\"Section_Section__heading__34HN1\",\"Section\":\"Section_Section__3puHi\",\"Phonebook\":\"Section_Phonebook__2tvNY Section_Section__3puHi\",\"Contacts\":\"Section_Contacts__1DURk Section_Section__3puHi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsItem\":\"ContactsItem_ContactsItem__2LYMO\",\"ContactsItem__button\":\"ContactsItem_ContactsItem__button__2jx2I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contacts__list\":\"Contacts_Contacts__list__skMMO\",\"Contacts__message\":\"Contacts_Contacts__message__GYFVQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__1ZcJ0\",\"Form__item\":\"Form_Form__item__18QdP\",\"Form__input\":\"Form_Form__input__2-IBg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter__input\":\"Filter_Filter__input__gEsST\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactsView\":\"ContactsView_ContactsView__hZiTJ\"};","import React from 'react';\r\nimport s from 'components/Section/Section.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ text, className, children }) {\r\n  return (\r\n    <section className={(s.Section, s[className])}>\r\n      <h2 className={s.Section__heading}>{text}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  text: PropTypes.string,\r\n  className: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport { Section };\r\n","import React from 'react';\r\nimport s from 'components/Contacts/ContactsItem.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction ContactsItem({ id, name, number, deleteFunc }) {\r\n  return (\r\n    <li key={id} className={s.ContactsItem}>\r\n      <span className={s.ContactsItem__text}>\r\n        {name}: {number}\r\n      </span>\r\n      <button\r\n        type=\"button\"\r\n        className={s.ContactsItem__button}\r\n        onClick={() => deleteFunc(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nContactsItem.propTypes = {\r\n  id: PropTypes.string,\r\n  number: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  name: PropTypes.string,\r\n  deleteFunc: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { ContactsItem };\r\n","export const getFilter = state => state.contacts.filter;\n\nconst getContacts = state => state.contacts.items;\n\nexport const getVisibleContacts = state => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import React from 'react';\r\nimport { Section } from 'components/Section/Section';\r\nimport { ContactsItem } from './ContactsItem';\r\nimport s from 'components/Contacts/Contacts.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../store/contacts/contacts-operations';\r\nimport { getVisibleContacts } from 'store/contacts/contacts-selectors';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction Contacts({ contacts, onDeleteContact }) {\r\n  const state = useSelector(state => state.state);\r\n  console.log(state);\r\n  return (\r\n    <Section className={s.Contacts} text=\"Contacts\">\r\n      {/* <p>Total: { `${number}`} contacts</p> */}\r\n      <ul className={s.Contacts__list}>\r\n        {contacts.length === 0 ? (\r\n          <h3 className={s.Contacts__message}>Nothing is here</h3>\r\n        ) : (\r\n          contacts.map(({ name, id, number }) => (\r\n            <ContactsItem\r\n              deleteFunc={() => onDeleteContact(id)}\r\n              name={name}\r\n              key={id}\r\n              number={number}\r\n            />\r\n          ))\r\n        )}\r\n      </ul>\r\n    </Section>\r\n  );\r\n}\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  name: PropTypes.string,\r\n  id: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} from 'store/contacts/contacts-actions';\nimport axios from 'axios';\n\nexport const fetchContacts = () => async dispatch => {\n  dispatch(fetchContactsRequest);\n\n  try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error));\n  }\n};\n\nexport const addContact =\n  ({ name, number }) =>\n  dispatch => {\n    const contact = { name, number };\n\n    dispatch(addContactRequest());\n    axios\n      .post(`/contacts`, contact)\n      .then(({ data }) => dispatch(addContactSuccess(data)))\n      .catch(error => dispatch(addContactError(error)));\n  };\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","import React, { useState } from 'react';\r\nimport { Section } from 'components/Section/Section';\r\nimport s from 'components/Form/Form.module.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { connect, useSelector } from 'react-redux';\r\nimport { addContact } from 'store/contacts/contacts-operations';\r\n\r\nfunction Form({ onSubmit }) {\r\n  const contacts = useSelector(state => state.contacts.items);\r\n  console.log(contacts);\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const findMap = contacts.find(contact => contact.name === name);\r\n\r\n  const handleSubmit = e => {\r\n    if (findMap) {\r\n      alert(`${name} is already in contacts!`);\r\n      return;\r\n    } else {\r\n      e.preventDefault();\r\n      onSubmit({ name, number });\r\n      reset();\r\n    }\r\n  };\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <Section className=\"Phonebook\" text=\"Phonebook\">\r\n      <form onSubmit={handleSubmit} className={s.Form}>\r\n        <label htmlFor=\"input-name\" className={s.Form__item}>\r\n          Name\r\n        </label>\r\n        <input\r\n          className={s.Form__input}\r\n          id=\"input-name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <label htmlFor=\"input-tel\" className={s.Form__item}>\r\n          Phone number\r\n        </label>\r\n        <input\r\n          onChange={handleChange}\r\n          className={s.Form__input}\r\n          id=\"input-tel\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n\r\n        <button type=\"submit\" className={s.Form__button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </Section>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n  className: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: ({ name, number }) => dispatch(addContact({ name, number })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from 'store/contacts/contacts-actions';\r\nimport { getFilter } from '../../store/contacts/contacts-selectors';\r\nimport s from './Filter.module.scss'\r\n\r\nfunction Filter({ value, onChange }) {\r\n  return (\r\n    <label htmlFor=\"search\">\r\n      Find contacts by name\r\n      <input id=\"search\" type=\"text\" value={value} onChange={onChange} className={s.Filter__input} />\r\n    </label>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({ value: getFilter(state) });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import Contacts from 'components/Contacts/Contacts';\nimport Form from 'components/Form';\nimport Filter from 'components/Filter/Filter';\nimport Container from 'components/Container/Container';\nimport { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'store/contacts/contacts-operations';\nimport s from './ContactsView.module.scss';\n\nfunction ContactsView() {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(fetchContacts()), [dispatch]);\n  return (\n    <Container>\n      <div className={s.ContactsView}>\n        <Form />\n        <Filter />\n        <Contacts />\n      </div>\n    </Container>\n  );\n}\n\nexport default ContactsView;\n"],"sourceRoot":""}